#Test cases for 7-base_geometry

#Importing the function:
    >>> BaseGeometry = __import__('7-base_geometry).BaseGeometry

#Case 1
    #non integer value
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", "5")
    Traceback (most recent call last):
    ...
    TypeError: name must be an integer

#Case 2
    #area is not implemented
    >>> bg = BaseGeometry()
    >>> bg.area()
    Traceback (most recent call last):
    ...
    [Exception] area() is not implemented

#Case 3
    #Regular test
    >>> bg = BaseGeometry()

    >>> bg.integer_validator("my_int", 12)
    >>> bg.integer_validator("width", 89)

    >>> try:
        >>> bg.integer_validator("name", "John")
    >>> except Exception as e:
        >>> print("[{}] {}".format(e.__class__.__name__, e))

    >>> try:
        >>> bg.integer_validator("age", 0)
    >>> except Exception as e:
        >>> print("[{}] {}".format(e.__class__.__name__, e))

    >>> try:
        >>> bg.integer_validator("distance", -4)
    >>> except Exception as e:
        >>> print("[{}] {}".format(e.__class__.__name__, e))

    [TypeError] name must be an integer
    [ValueError] age must be greater than 0
    [ValueError] distance must be greater than 0

#Case 4
    #one argument to integer_validator
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name")
    Traceback (most recent call last):
    	      ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'

#Case 5
    #too many arguments for area
    >>> bg = BaseGeometry()
    >>> bg.area(5)
    Traceback (most recent call last):
    ...
    TypeError: area() takes 1 positional argument but 2 were given

