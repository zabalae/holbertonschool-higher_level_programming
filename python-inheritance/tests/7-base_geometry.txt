#Test cases for 7-base_geometry

>>> baseGeometry = __import__('7-base_geometry).baseGeometry

#Case 1
    >>> baseGeo = baseGeometry()
    >>> baseGeo.integer_validator("name", "5")
    Traceback (most recent call last):
    ...
    TypeError: name must be an integer

#Case 2
    baseGeo = BaseGeometry()

    baseGeo.integer_validator("my_int", 12)
    baseGeo.integer_validator("width", 89)

    try:
        baseGeo.integer_validator("name", "John")
    except Exception as e:
        print("[{}] {}".format(e.__class__.__name__, e))

    try:
        baseGeo.integer_validator("age", 0)
    except Exception as e:
        print("[{}] {}".format(e.__class__.__name__, e))

    try:
        baseGeo.integer_validator("distance", -4)
    except Exception as e:
        print("[{}] {}".format(e.__class__.__name__, e))

    [TypeError] name must be an integer
    [ValueError] age must be greater than 0
    [ValueError] distance must be greater than 0

#Case 3
    >>> baseGeo = BaseGeometry()
    >>> baseGeo.integer_validator("name")
    Traceback (most recent call last):
    	      ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'